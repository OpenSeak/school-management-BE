
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AssignmentsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  subject: 'subject',
  class: 'class',
  section: 'section',
  assigned_by: 'assigned_by',
  due_date: 'due_date',
  file: 'file'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  teacher_id: 'teacher_id',
  class: 'class',
  section: 'section',
  date: 'date',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.CalendarScalarFieldEnum = {
  id: 'id',
  month: 'month',
  calendar: 'calendar',
  year: 'year'
};

exports.Prisma.Class_representativesScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  class: 'class',
  section: 'section'
};

exports.Prisma.Class_routineScalarFieldEnum = {
  id: 'id',
  class: 'class',
  section: 'section',
  day: 'day',
  period: 'period',
  subject: 'subject',
  teacher_id: 'teacher_id'
};

exports.Prisma.Class_teachersScalarFieldEnum = {
  id: 'id',
  class: 'class',
  section: 'section',
  teacher_id: 'teacher_id',
  class_representative_student_id: 'class_representative_student_id',
  second_class_representative_student_id: 'second_class_representative_student_id'
};

exports.Prisma.ExamsScalarFieldEnum = {
  id: 'id',
  class: 'class',
  section: 'section',
  subject: 'subject',
  exam_date: 'exam_date',
  exam_duration: 'exam_duration',
  exam_type: 'exam_type',
  created_by: 'created_by'
};

exports.Prisma.FinancecheckbookScalarFieldEnum = {
  id: 'id',
  month: 'month',
  income: 'income',
  expenses: 'expenses',
  total_due_amount: 'total_due_amount'
};

exports.Prisma.FinancesScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  total_fee: 'total_fee',
  paid_amount: 'paid_amount',
  due_amount: 'due_amount',
  month: 'month',
  payment_status: 'payment_status',
  penalty: 'penalty',
  expenses: 'expenses'
};

exports.Prisma.NotesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  subject: 'subject',
  class: 'class',
  section: 'section',
  created_by: 'created_by',
  files: 'files',
  created_at: 'created_at'
};

exports.Prisma.NoticesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  created_at: 'created_at',
  created_by: 'created_by',
  target_role: 'target_role'
};

exports.Prisma.PerformanceScalarFieldEnum = {
  id: 'id',
  class: 'class',
  section: 'section',
  class_teacher: 'class_teacher',
  class_performance: 'class_performance',
  exam_id: 'exam_id'
};

exports.Prisma.Student_performanceScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  exam_id: 'exam_id',
  marks_obtained: 'marks_obtained',
  total_marks: 'total_marks'
};

exports.Prisma.Student_routineScalarFieldEnum = {
  id: 'id',
  class: 'class',
  section: 'section',
  day: 'day',
  teacher_id: 'teacher_id',
  teacher_name: 'teacher_name',
  teacher_subject: 'teacher_subject',
  time_slot: 'time_slot'
};

exports.Prisma.StudentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  admission_number: 'admission_number',
  class: 'class',
  section: 'section',
  parent_name: 'parent_name',
  parent_phone: 'parent_phone',
  parent_email: 'parent_email',
  parent_work: 'parent_work',
  parent_photo1: 'parent_photo1',
  parent_photo2: 'parent_photo2',
  guardian_photo: 'guardian_photo',
  guardian_phone: 'guardian_phone',
  roll_number: 'roll_number'
};

exports.Prisma.Teacher_routineScalarFieldEnum = {
  id: 'id',
  teacher_id: 'teacher_id',
  day: 'day',
  time_slot: 'time_slot',
  class: 'class',
  section: 'section'
};

exports.Prisma.TeachersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  specialised_subject: 'specialised_subject',
  assigned_class: 'assigned_class',
  assigned_section: 'assigned_section'
};

exports.Prisma.Upcoming_eventsScalarFieldEnum = {
  id: 'id',
  calendar_id: 'calendar_id',
  event_date: 'event_date',
  event_name: 'event_name',
  holiday: 'holiday'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  phone: 'phone',
  address: 'address',
  photo: 'photo'
};

exports.Prisma.Workroom_messagesScalarFieldEnum = {
  id: 'id',
  sender_id: 'sender_id',
  receiver_id: 'receiver_id',
  message: 'message',
  sent_at: 'sent_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  assignments: 'assignments',
  attendance: 'attendance',
  calendar: 'calendar',
  class_representatives: 'class_representatives',
  class_routine: 'class_routine',
  class_teachers: 'class_teachers',
  exams: 'exams',
  financecheckbook: 'financecheckbook',
  finances: 'finances',
  notes: 'notes',
  notices: 'notices',
  performance: 'performance',
  student_performance: 'student_performance',
  student_routine: 'student_routine',
  students: 'students',
  teacher_routine: 'teacher_routine',
  teachers: 'teachers',
  upcoming_events: 'upcoming_events',
  users: 'users',
  workroom_messages: 'workroom_messages'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
